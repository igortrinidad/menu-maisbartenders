#!/bin/bash


#Retorna o ultimo commit
commits=(`git log -1 --pretty=%s`)

#Verifica em cada palavra para encontrar os padrões abaixo e executar ações especificas de acordo com cada padrão
for commit in "${commits[@]}"
do
    #Se houver a palavra --build-testing ele atualiza a versão, altera no arquivo de configurações antes de gerar o build o ENV: 'testing'
    if [ $commit == "--build-simple" ]; then

        git push
        wait

        cd automating
        version=(`env=simple  node update-version.js`);
        wait
        echo "Version updated to ${version}."
        cd ../

        gulp --production
        wait

        #npm run build
        #wait

        git add -A;
        git commit -m "Build generated version: ${version}.";
        git push

    #Se houver a palavra --build-production ele atualiza a versão, altera no arquivo de configurações antes de gerar o build o ENV: 'production'
    elif [ $commit == "--build-production" ]; then

        git push
        wait

        cd automating
        version=(`env=production  node update-version.js`);
        wait
        echo "Version updated to ${version}."
        cd ../

        gulp --production
        wait

        #npm run build
        #wait

        git add -A;
        echo "**********************************************";
        git commit -m "Build generated version: ${version}.";
        git push
        git checkout dev
        git merge master
        git pull
        git push
        echo "BRANCH ALTERADA PARA: DEV"

    elif [ $commit == "--update" ]; then

        cd automating
        version=(`env=production  node update-version.js`);
        wait
        echo "Version updated to ${version}."
        
        cd ../
        git add -A;
        echo "**********************************************";
        git commit -m "Build generated version: ${version}.";
        git push
        git checkout master;
        git merge dev;
        echo "BRANCH ALTERADA PARA: MASTER"

        git add -A;
        git commit -m "Merge from dev: ${version}.";
        git push

        git checkout dev
        echo "BRANCH ALTERADA PARA: DEV"
        git merge master;
        git add -A;
        git commit -m "Merge from master: ${version}.";

        echo "FINISHING THE JOB"
        git push
        git pull
    fi
done


